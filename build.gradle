import org.gradle.internal.os.OperatingSystem

plugins {
    id 'java'
    id 'application'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = 'snake'
version = '1.0.0'
group = 'moe.lumii'

project.ext.lwjglVersion = "3.3.1"

switch (OperatingSystem.current()) {
    case OperatingSystem.LINUX:
        def osArch = System.getProperty("os.arch")
        project.ext.lwjglNatives = osArch.startsWith("arm") || osArch.startsWith("aarch64")
                ? "natives-linux-${osArch.contains("64") || osArch.startsWith("armv8") ? "arm64" : "arm32"}"
                : "natives-linux"
        break
    case OperatingSystem.MAC_OS:
        project.ext.lwjglNatives = System.getProperty("os.arch").startsWith("aarch64") ? "natives-macos-arm64" : "natives-macos"
        break
    case OperatingSystem.WINDOWS:
        def osArch = System.getProperty("os.arch")
        project.ext.lwjglNatives = osArch.contains("64")
                ? "natives-windows${osArch.startsWith("aarch64") ? "-arm64" : ""}"
                : "natives-windows-x86"
        break
}

project.ext.slf4jVersion = "1.7.36"
project.ext.tinyLogVersion = "2.4.1"

repositories {
    mavenCentral()
}

dependencies {
    // Logging
    implementation group: 'org.tinylog', name: 'tinylog-api', version: project.ext.tinyLogVersion
    implementation group: 'org.tinylog', name: 'tinylog-impl', version: project.ext.tinyLogVersion
    implementation group: 'org.slf4j', name: 'slf4j-api', version: project.ext.slf4jVersion
    implementation group: 'org.tinylog', name: 'slf4j-tinylog', version: project.ext.tinyLogVersion

    // LWJGL
    implementation platform(group: 'org.lwjgl', name: 'lwjgl-bom', version: project.ext.lwjglVersion)
    implementation group: 'org.lwjgl', name: 'lwjgl', version: project.ext.lwjglVersion
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    implementation group: 'org.lwjgl', name: 'lwjgl-assimp', version: project.ext.lwjglVersion
    runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
    implementation group: 'org.lwjgl', name: 'lwjgl-glfw', version: project.ext.lwjglVersion
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    implementation group: 'org.lwjgl', name: 'lwjgl-openal', version: project.ext.lwjglVersion
    runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
    implementation group: 'org.lwjgl', name: 'lwjgl-opengl', version: project.ext.lwjglVersion
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    implementation group: 'org.lwjgl', name: 'lwjgl-stb', version: project.ext.lwjglVersion
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
}

mainClassName = "moe.lumii.Start"

run {
    System.out.println()
    File file = new File("${rootProject.projectDir}/run")
    file.mkdirs()
    workingDir = file
    if (OperatingSystem.current() == OperatingSystem.MAC_OS)
        jvmArgs = ["-XstartOnFirstThread"]
}

application {
    if (OperatingSystem.current() == OperatingSystem.MAC_OS)
        applicationDefaultJvmArgs = ["-XstartOnFirstThread"]
}
